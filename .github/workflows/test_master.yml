name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Test
    env:
      extensions: pdo, pdo_mysql
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['7.4', '8.0', '8.1']

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: yii2_query_relation_manager_test
          MYSQL_USER: user
          MYSQL_PASSWORD: 123456789
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          coverage: xdebug
          tools: composer:v2

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: PHP Version Check
        run: php -v

      - name: Validate Composer JSON
        run: composer validate

      - name: Run Composer
        run: composer install --no-interaction

      - name: Run migrations
        run: composer test-migrate

      - name: Unit tests
        run: |
          composer test-init
          composer test

      - name: PHP Code Sniffer
        run: composer codesniffer

      - name: PHPStan analysis
        run: composer stan

  code-coverage:
    name: Code coverage
    env:
      extensions: pdo, pdo_mysql
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['7.4']

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: yii2_query_relation_manager_test
          MYSQL_USER: user
          MYSQL_PASSWORD: 123456789
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          coverage: xdebug
          tools: composer:v2

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run Composer
        run: composer install --no-interaction

      - name: Run migrations
        run: composer test-migrate

      - name: Unit tests
        run: |
          composer test-init
          composer test-coverage-xml
          mkdir -p ./build/logs
          cp ./tests/_output/coverage.xml ./build/logs/clover.xml
      - name: Code Coverage (Coveralls)
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: php vendor/bin/php-coveralls -v
